group 'com.mq'
version '1.0.0'

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    repositories { maven { url 'http://192.168.1.200:8081/repository/maven-public/' } }
    repositories { maven { url 'https://repo.spring.io/libs-snapshot/' } }
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.2'
    compile group: 'org.apache.zookeeper', name: 'zookeeper', version: '3.4.6', ext: 'pom'
    compile group: 'org.mybatis', name: 'mybatis-spring', version: '1.3.0'
    compile group: 'org.springframework', name: 'spring-jdbc', version: '4.3.7.RELEASE'
    compile group: 'org.springframework', name: 'spring-jdbc', version: '4.3.7.RELEASE'
    compile group: 'org.springframework', name: 'spring-webmvc', version: '4.3.7.RELEASE'
    compile group: 'com.alibaba', name: 'dubbo', version: '2.6.1'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.7'
    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.1.7'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'
    compile group: 'org.apache.curator', name: 'curator-framework', version: '2.7.1'
    compile group: 'redis.clients', name: 'jedis', version: '2.8.1'
    compile group: 'org.springframework.data', name: 'spring-data-redis', version: '1.7.1.RELEASE'
    compile group: 'com.rabbitmq', name: 'amqp-client', version: '5.2.0'
    compile group: 'org.springframework.amqp', name: 'spring-rabbit', version: '2.0.3.RELEASE'
    fileTree(dir: 'lib', include: '*.jar')
}

jar {
    String someString = ''
    configurations.runtime.each {someString = someString + " ./lib/"+it.name} //遍历项目的所有依赖的jar包赋值给变量someString
    manifest {
        attributes 'Main-Class': 'com.alibaba.dubbo.container.Main'
        attributes 'Class-Path': someString
    }
}

//清除上次的编译过的文件
task clearPj(type:Delete){
    delete 'build','target'
}

task copyJar(type:Copy){
    from configurations.runtime
    into ('build/libs/lib')

}

task release(type: Copy,dependsOn: [build,copyJar]) {
//    from  'conf'
    //   into ('build/libs/eachend/conf')
}
